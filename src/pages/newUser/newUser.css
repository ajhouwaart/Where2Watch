.outerNewUserBox {
    position: absolute;
    left: 0;
    top: 0;
    display: grid;
    padding: 1.5rem;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    gap: 1.5rem;
    max-width: 64rem;
    max-height: 89vh;
    width: 100vw;
    background-color: hsl(var(--mainColor));
    border-radius: 0 0 3rem 3rem;
    transform-origin:center center;
    animation: scale 400ms ease-out;
}

.nwUsrBox {
    width: 100%;
    border-radius: 2rem;
    padding: 1.5rem;
    display: flex;
    gap: 2rem;
    flex-direction: var(--flexdirectionrowtocolumn);
    justify-content: space-between;
    align-items: center;
    background-color: hsl(var(--mainTint), 30%);
}
.register-buttons-container {
    display: flex;
    max-width: 15rem;
    width: 100%;
    justify-content: space-between;
}
.newUserBackButton,
.registerSubmitBtn {
    position: relative;
    width: 6rem;
    height: 6rem;
    border: 3px solid hsla(var(--mainColor), 1);
    background-color: hsla(var(--mainTint), 70%, 1);
    border-radius: 50%;
    transition: transform 300ms ease-in-out;
}
.newUserBackButton:hover,
.registerSubmitBtn:hover {
    cursor: pointer;
    transform: scale(1.2);
    transition: transform 300ms ease-in-out;
}
.newUserBackButton::before,
.registerSubmitBtn::before,
.newUserBackButton::after,
.registerSubmitBtn::after {
    position: absolute;
    left:0;
    top:0;
    content: '';
    box-sizing: border-box;
    width: 5rem;
    height: .5rem;
    border-radius: 100%;
    background: white;
    z-index:1;
}
.newUserBackButton::before {
    transform: rotate(45deg);
    top: 2.5rem;
    left: .3rem;
    background: darkred;
}
.newUserBackButton::after {
    transform: rotate(-45deg);
    top: 2.5rem;
    left: .3rem;
    background: darkred;
}
.registerSubmitBtn::before {
    transform: rotate(60deg) scale(1.2);
    top: 3.4rem;
    left: .3rem;
    width: 2rem;
    background: darkgreen;
}
.registerSubmitBtn::after {
    transform: rotate(-60deg) scale(1.2);
    top: 2.5rem;
    left: 1rem;
    width: 4rem;
    background: darkgreen;
}

/* Hide the browser's default checkbox */
.checkbox {
    position: relative;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    z-index: 2;
}
.newsLetterLabel,
.termsConditionsLabel {
    color: hsl(var(--textColor));
    display: flex;
    align-items: center;
    font-size: 1.2rem;
    position: relative;
    z-index: 2;
}
.newsLetterLabel > div,
.termsConditionsLabel > div {
    text-align: left;
    margin-left: 1.2rem;
    font-size: 1.3rem;
}

.checkboxContainer {
    display: flex;
    flex-direction: column;
    gap:1rem;
}
/* Create a custom checkbox */
.checkmark {
    cursor: pointer;
    position: relative;
    box-sizing: content-box;
    flex-shrink: 0;
    height: 2rem;
    width: 2rem;
    border: .3rem solid hsla(var(--mainColor), 1);
    background-color: hsla(var(--mainTint), 70%, 1);
    border-radius: 50%;
    z-index: 2;
}
/* On mouse-over, add a background color */
.newsLetterLabel:hover input ~ .checkmark,
.termsConditionsLabel:hover input ~ .checkmark {
    background-color: hsla(var(--mainTint), 85%, 1);
    transition: background-color 300ms ease-out;
}
/* When the checkbox is checked */
.newsLetterLabel input:checked ~ .checkmark,
.termsConditionsLabel input:checked ~ .checkmark {
    background-color: hsl(var(--mainTint), 30%);
    transition: background-color .5s ease-in-out;
}
/* Create the checkmark/indicator (hidden when not checked) */
.checkmark::after {
    content: "";
    position: absolute;
    display: none;
    z-index: 2;
}
/* Show the checkmark when checked */
.newsLetterLabel input:checked ~ .checkmark::after,
.termsConditionsLabel input:checked ~ .checkmark::after {
    display: block;
    z-index: 2;
}
/* Style the checkmark/indicator */
.newsLetterLabel .checkmark::after,
.termsConditionsLabel .checkmark::after {
    left: .6rem;
    top: .2rem;
    width: .5rem;
    height: 1.1rem;
    border: solid hsl(0, 0%, 90%);
    border-width: 0 .3rem .3rem 0;
    transform: rotate(45deg);
    z-index: 2;
    transition: border .5s ease-in-out;
}
.errortermsandCo {
    color: hsla(360, 80%, 50%, .9);
    animation: termpulse 600ms infinite alternate-reverse ease-out;
}
.removeTD {
    text-decoration: underline;
    color: hsl(var(--textColor));
}
.ErrorRemoveTD {
    text-decoration: underline;
    color: hsla(360, 80%, 50%, .9);
    animation: termpulse 600ms infinite alternate-reverse ease-out;
}
#comments {
    width: 100%;
    resize: none;
    outline: none;
    padding: .5rem;
    border-radius: 1rem;
    border: .4rem solid white;
}
#comments:focus {
    border: .4rem solid hsla(var(--mainColor), .5)
}

.referrer-container{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: var(--alignItemsFromEndToCenter);
}
.labelFound {
    font-size: 1.3rem;
    max-width: 100%;
    color: hsl(var(--textColor));
}
#referrer {
    height: 2.5rem;
    border-radius: .9rem;
    color: hsl(var(--mainColorHue) 5% 10%);
    width: 75%;
    margin-top: .5rem;
    border: .4rem solid hsl(0 0% 100%);
    outline: none;
    box-sizing: border-box;
}
#referrer:focus {
    border: .4rem solid hsla(var(--mainColor), .5)
}
.other-referrer {
    margin-top: .7rem;
}
.errorRegisterFailed {
    font-size: 2rem;
    margin:0 auto 0 auto;
    max-width: max-content;
    color: hsl(var(--textColor));
    animation: bottomborderpulse 500ms infinite alternate-reverse;
}
#loadingnewuser {
    margin:0 auto 0 auto;
}

